services:
  demo-orchestrator-api:
    environment:
      SECRET_ACCESSKEY: ""
      SECRET_KEY: ""
      SECRET_NAME: "ec-fh"
      SECRET_REGION_NAME: "us-east-1"
      DEV_CONNECTION_STRING: "Geraldo"
      OP2B_ORIGEM: "ec-fh"
      ELASTIC_SEARCH_URL: "http://vcm-observability-elasticsearch:9200"
      VCE_ENDPOINT: "http://demo-xml:5000/api/op2b/create-xml"
      XML2GDX_ENDPOINT: "http://demo-generategdx:5000/xml2gdx"
      GDX2MSSQL_ENDPOINT: "http://demo-consume-gdx:5000/gdx2mssql/"
      ENGINECALCULATE_ENDPOINT: "http://demo-optengine-api:5000/optengine"
      ADDINWEBAPI_ENDPOINT: "http://demo-backendaddin:5000/api/Redis/scan-refresh"
      INPUT_GDX_NAME: "Entradas"
      OUTPUT_GDX_NAME: "Resultados"
    restart: always
    image: dockerhubop2b/vcm-optimization-service-orch-api:1.0.11
    container_name: demo-orchestrator-api
    ports:
      - "6000:5000"
    networks:
      - banco_vcm-network

  demo-optengine-api:
    image: dockerhubop2b/vcm-optengine-api:1.0.7
    restart: always
    container_name: demo-optengine-api
    ports:
      - "6003:5000"
    environment:
      ENGINEWORKDIR: "/opt/engine/wkdir"
      LOGPATH: "/opt/engine/wkdir/logs"
      MODELSPATH: "/opt/engine/src/modelos"
      PYSECSCRIPT: "OptEngineCalledStreaming.py"
      MODELBASENAME: ""
    volumes:
      - "/home/ubuntu/volumes/GDX/modelos:/opt/engine/src/modelos"
      - "/home/ubuntu/volumes/GDX:/opt/engine/wkdir"
      - "/home/ubuntu/volumes/GDX/gdxtemp:/opt/engine/gdx_temp"
    networks:
      - banco_vcm-network

  demo-xml:
    image: dockerhubop2b/vcm-xml-refactory-api:12.0.9
    container_name: demo-xml
    environment:
      XMLPATH: "/app/wkdir/"
      DEV_CONNECTION_STRING: "2424"
      XMLISTOBEIDENTITY: "false"
      ISICMSAGREGADO: "true"
      SECRET_ACCESSKEY: ""
      SECRET_KEY: ""
      SECRET_NAME: "ec-fh"
      SECRET_REGION_NAME: "us-east-1"
      ELASTIC_SEARCH_URL: "http://vcm-observability-elasticsearch:9200"
      OP2B_ORIGEM: "ec-fh"
    volumes:
      - "/home/ubuntu/volumes/GDX:/app/wkdir"
    ports:
      - "6001:5000"
    restart: always
    networks:
      - banco_vcm-network

  demo-op2b.utility-api:
    image: dockerhubop2b/vcm-util:20240508190418
    container_name: demo-op2b.utility-api
    environment:
      DEV_CONNECTION_STRING: "2424"
      ADDINWEBAPI_ENDPOINT: "http://localhost:6005/api/Redis/scan-refresh"
      ELASTIC_SEARCH_URL: "true"
      SECRET_ACCESSKEY: ""
      SECRET_KEY: ""
      SECRET_NAME: "ec-fh"
      SECRET_REGION_NAME: "us-east-1"
      GDXPATH: ""
      OP2B_ORIGEM: "ec-fh"
    ports:
      - "6006:5000"
    restart: always
    networks:
      - banco_vcm-network

  demo-wizard-clone:
    image: dockerhubop2b/vcm-clonepluswizard-api:1.8.3
    container_name: demo-golang
    environment:
      APP_PORT: 8080
      SQL_SERVER: "rewrw"
      SQL_PORT: 
      SQL_DB: "eeew"
      SQL_USER: "eee"
      SQL_PWD: "ewe"
      UPLOAD_FOLDER: "/app"
      MAXUPLOAD_SIZE_IN_MB: 10
    working_dir: "/app"
    command: "./main"
    ports:
      - "8666:8080"
    restart: always
    networks:
      - banco_vcm-network
  demo-generate-gdx:
    image: dockerhubop2b/vcm-xml2gdx-api:2.1.4
    restart: always
    container_name: demo-generategdx
    ports:
      - "6002:5000"
    volumes:
      - "/home/ubuntu/volumes/GDX:/opt/gams/wkdir"
    environment:
      GDX_WORKDIR: "/opt/gams/wkdir"
    networks:
      - banco_vcm-network

  demo-consume-gdx:
    image: dockerhubop2b/vcm-gdx2mssql-api:2.6.3
    ports:
      - "6004:5000"
    volumes:
      - "/home/ubuntu/volumes/GDX:/opt/app/wkdir"
    environment:
      WORKER_DIR: "/opt/app/wkdir"
      DATABASE_NAME: "werew"
      DATABASE_IP: ""
      DATABASE_PORT: 
      DATABASE_PASSWORD: "www"
      DATABASE_USER: "rqerew"
      DATABASE_ADDIN: ""
      ENTRADA_EXCLUDES_WHEN_ALLZERO: "cusSeg,pde,CusFixF,CusVarF,valor,Hout,Hin,cusArm,cFin"
    restart: always
    networks:
      - banco_vcm-network

  demo-backend-addin:
    image: dockerhubop2b/eurochem-vcm-addin-api:1.0.5
    container_name: demo-backendaddin
    links:
      - demo-redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SECRET_ACCESSKEY=10.37.1.59
      - SECRET_KEY=EC_FH
      - SECRET_NAME=sa
      - SECRET_REGION_NAME=Admin123
      - DEV_CONNECTION_STRING=2424
      - REDIS_SERVER=demo-redis
      - REDIS_PORT=6379
      - REDIS_PWD=Macanudo1974
      - USEREDIS=true
    ports:
      - "6005:5000"
    restart: always
    networks:
      - banco_vcm-network

  demo-frontend-addin:
    environment:
      APIURL: http://demo-backend-addin:5000
    restart: always
    image: dockerhubop2b/vcmaddinfront:2.0
    container_name: demo-frontendaddin
    ports:
      - "49160:8080"
    networks:
      - banco_vcm-network
  demo-redis:
    container_name: demo-redis
    restart: always
    image: redis
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - banco_vcm-network

  demo-sqlserver:
    image: mcr.microsoft.com/mssql/server
    container_name: demo-sqlserver
    environment:
      SA_PASSWORD: "rreqwr"
      ACCEPT_EULA: "Y"
    ports:
      - "qq"
    networks:
      - banco_vcm-network
    volumes:
      - "eewwe"

networks:
  banco_vcm-network:
    external: false